# -*- coding: utf-8 -*-
"""
Created on Sun Sep  9 21:17:29 2018

@author: Hiroshi Nakano

Add "ID,SMILES,pKi\n" at the fisrst line to st01....csv generated by
   find_activity_cliff_with_data_cleansing.py
and seve as "st10....csv"


"""
file1="st10sample_dataset.csv"
file2="st11sample_dataset.csv"
#pathdb = "a5-thrombin-ChEMBL_24_bioactivity-18_11_01_08.csv"

import pandas as pd
import numpy as np
import os,sys
from rdkit import Chem
from rdkit.Chem import Descriptors
from rdkit.ML.Descriptors import MoleculeDescriptors


#f = open(pathdb)
#for line in f:
#    print(line)
#f.close()

df0 = pd.read_csv(file1)
df1 = df0.dropna(subset=['SMILES'])
allsmiles=df1.SMILES.values
mols = [Chem.MolFromSmiles(smiles) for smiles in allsmiles]  
 
allpKi=df1.pKi.values
allID=df1.ID.values

for pKi in allpKi:
    print(pKi)

# generate sdf file   
#writer=Chem.SDWriter('molecules.sdf')
#for mol in mols:
#	writer.write(mol)
#writer.close()

names = [x[0] for x in Descriptors._descList]
print(names)
print(len(names))

calc = MoleculeDescriptors.MolecularDescriptorCalculator(names)
#descs = [calc.CalcDescriptors(mol) for mol in mols]
f=open(file2,'w')
for each_desc_name in names:
   f.write(str(each_desc_name))
   f.write(',')
f.write('pKi\n') 

for imol, mol in enumerate(mols):
    print(imol)
    desc = calc.CalcDescriptors(mol)
    # delete molcules including NaN or other illegal value
    flagNG=False 
    for val in desc:
        sval = str(val)
        if sval.isalpha():
            print(sval)
            flagNG=True
    #print(flagNG)
    if not(flagNG):
        f.write(str(allID[imol])+',')
        for each_desc in desc:
            f.write(str(each_desc))
            f.write(',')
        f.write(str(allpKi[imol]))
        f.write('\n')
    else:
        print("Detect an NG molecule: ",end="")
        print(imol)        

f.close()
